version:  "3.9"

services:
  web:
    container_name: "rise-web"
    build:
      context: ./rise-web
      dockerfile: ./Dockerfile
    ports:
      - "4200:80"
    volumes:
      - rise-storage:/usr/share/nginx/html/assets/uploads
    networks:
      - "rise_net"

  api:
    container_name: "rise-api"
    build:
      context: .
      dockerfile: ./rise-api/Rise.Api/Dockerfile
    depends_on:
      - "rise-db"
      - "rise-cache"
    environment:
      ASPNETCORE_URLS : "https://+;http://+" 
      ASPNETCORE_HTTPS_PORT : 5002
      # ASPNETCORE_Kestrel__Certificates__Default__Password : ${CERTIFICATE_PASSWORD}
      # ASPNETCORE_Kestrel__Certificates__Default__Path: ${CERTIFICATE_PATH}
      ASPNETCORE_ENVIRONMENT: ${ENVIRONMENT}
      GoogleAuthSettings__AppId: ${GOOGLE_API_KEY}
      GoogleAuthSettings__AppSecret: ${GOOGLE_SECRET}
      ConnectionStrings__DefaultConnection: ${DB_CONNECTION}
      ConnectionStrings__Hangfire: ${HANGFIRE_DB}
      ConnectionStrings__Redis: ${REDIS_CONNECTION}
      HurmaSettings__ApiKey: ${HURMA_API_KEY}
      HangfireSettings__UserName: ${HANGFIRE_USERNAME}
      HangfireSettings__Password: ${HANGFIRE_PASSWORD}
      ElasticSettings__Url: ${ELASTIC_URL}
      ElasticSettings__UserName: ${ELASTIC_USERNAME}
      ElasticSettings__Password: ${ELASTIC_PASSWORD}
      EmailSettings__Password: ${SMTP_PASSWORD}
      EmailSettings__Whitelist: ${EMAILS_WHITELIST}
      NovaPoshta__ApiKey: ${NOVAPOSHTA_APIKEY}
      SecuritySettings__EncryptionKey: ${ENCRYPTION_KEY}
      SecuritySettings__TokenSecret: ${TOKEN_SECRET}
      SecuritySettings__EnableHttps: ${ENABLE_HTTPS}
    ports:
      - "5001:80"
      - "5002:443"
    networks:
      - "rise_net"
    volumes:
      - rise-storage:/app/uploads
      - rise-certificate:/app/https
  
  rise-db:
    image: postgres
    container_name : "rise-db"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - "rise_net"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: rise
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: rise-db

  rise-cache:
    image: redis
    container_name: "rise-cache"
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - cache:/data
    networks:
      - rise_net

  elasticsearch:
    container_name: rise-elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    ports:
     - 9200:9200
    volumes:
     - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
     - xpack.security.enabled=true
     - discovery.type=single-node
     - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    networks:
     - rise_net

  kibana:
    container_name: rise-kibana
    image: docker.elastic.co/kibana/kibana:7.9.2
    ports:
     - 5601:5601
    depends_on:
     - elasticsearch
    environment:
      - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=true
    networks:
     - rise_net

volumes:
  elasticsearch-data:
    name: "rise-elastic-data"
    driver: local
  db-data:
    name: "db-data"
  rise-storage:
    name: "rise-storage"
  rise-certificate:
    name: "rise-certificate"
  cache:
    name: "rise-cache"
    driver: local

networks:
  rise_net:
    name: "rise_net"